{"ast":null,"code":"import _objectSpread from\"/Users/prajaktabavikar/My Projects/React/mealapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useContext}from\"react\";import Modal from\"../UI/Modal\";import classes from\"./Cart.module.css\";import CartContext from\"../../store/Cart-context\";import CartItem from\"./CartItem\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Cart=function Cart(props){var cartContext=useContext(CartContext);var cartItemRemoveHandler=function cartItemRemoveHandler(id){cartContext.removeItem(id);};var cartItemAddHandler=function cartItemAddHandler(item){cartContext.addItem(_objectSpread(_objectSpread({},item),{},{amount:1}));};var cartItems=cartContext.items.map(function(el){return/*#__PURE__*/_jsx(CartItem,{name:el.name,amount:el.amount,price:el.price,onRemove:cartItemRemoveHandler.bind(null,el.id),onAdd:cartItemAddHandler.bind(null,el)},el.id);});var totAmt=\"\".concat(cartContext.totalAmount.toFixed(2));var hasItems=cartContext.items.length>0;return/*#__PURE__*/_jsxs(Modal,{onClose:props.onClose,children:[/*#__PURE__*/_jsx(\"ul\",{className:classes[\"cart-items\"],children:cartItems}),/*#__PURE__*/_jsxs(\"div\",{className:classes.total,children:[/*#__PURE__*/_jsx(\"div\",{children:\"Total\"}),/*#__PURE__*/_jsx(\"div\",{children:totAmt})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{className:classes[\"button-alt\"],onClick:props.onClose,children:\"Close\"}),hasItems&&/*#__PURE__*/_jsx(\"button\",{className:classes.order,children:\"Order\"})]})]});};export default Cart;","map":{"version":3,"sources":["/Users/prajaktabavikar/My Projects/React/mealapp/src/components/Cart/Cart.js"],"names":["useContext","Modal","classes","CartContext","CartItem","Cart","props","cartContext","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","cartItems","items","map","el","name","price","bind","totAmt","totalAmount","toFixed","hasItems","length","onClose","total","actions","order"],"mappings":"sKAAA,OAASA,UAAT,KAA2B,OAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,wFACA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAW,CACtB,GAAMC,CAAAA,WAAW,CAAGP,UAAU,CAACG,WAAD,CAA9B,CAEA,GAAMK,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,EAAD,CAAQ,CACpCF,WAAW,CAACG,UAAZ,CAAuBD,EAAvB,EACD,CAFD,CAIA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,IAAD,CAAU,CACnCL,WAAW,CAACM,OAAZ,gCAAyBD,IAAzB,MAA+BE,MAAM,CAAE,CAAvC,IACD,CAFD,CAIA,GAAMC,CAAAA,SAAS,CAAGR,WAAW,CAACS,KAAZ,CAAkBC,GAAlB,CAAsB,SAACC,EAAD,qBACtC,KAAC,QAAD,EAEE,IAAI,CAAEA,EAAE,CAACC,IAFX,CAGE,MAAM,CAAED,EAAE,CAACJ,MAHb,CAIE,KAAK,CAAEI,EAAE,CAACE,KAJZ,CAKE,QAAQ,CAAEZ,qBAAqB,CAACa,IAAtB,CAA2B,IAA3B,CAAiCH,EAAE,CAACT,EAApC,CALZ,CAME,KAAK,CAAEE,kBAAkB,CAACU,IAAnB,CAAwB,IAAxB,CAA8BH,EAA9B,CANT,EACOA,EAAE,CAACT,EADV,CADsC,EAAtB,CAAlB,CAUA,GAAMa,CAAAA,MAAM,WAAMf,WAAW,CAACgB,WAAZ,CAAwBC,OAAxB,CAAgC,CAAhC,CAAN,CAAZ,CACA,GAAMC,CAAAA,QAAQ,CAAGlB,WAAW,CAACS,KAAZ,CAAkBU,MAAlB,CAA2B,CAA5C,CAEA,mBACE,MAAC,KAAD,EAAO,OAAO,CAAEpB,KAAK,CAACqB,OAAtB,wBACE,WAAI,SAAS,CAAEzB,OAAO,CAAC,YAAD,CAAtB,UAAuCa,SAAvC,EADF,cAEE,aAAK,SAAS,CAAEb,OAAO,CAAC0B,KAAxB,wBACE,8BADF,cAEE,qBAAMN,MAAN,EAFF,GAFF,cAME,aAAK,SAAS,CAAEpB,OAAO,CAAC2B,OAAxB,wBACE,eAAQ,SAAS,CAAE3B,OAAO,CAAC,YAAD,CAA1B,CAA0C,OAAO,CAAEI,KAAK,CAACqB,OAAzD,mBADF,CAIGF,QAAQ,eAAI,eAAQ,SAAS,CAAEvB,OAAO,CAAC4B,KAA3B,mBAJf,GANF,GADF,CAeD,CAvCD,CAyCA,cAAezB,CAAAA,IAAf","sourcesContent":["import { useContext } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/Cart-context\";\nimport CartItem from \"./CartItem\";\nconst Cart = (props) => {\n  const cartContext = useContext(CartContext);\n\n  const cartItemRemoveHandler = (id) => {\n    cartContext.removeItem(id);\n  };\n\n  const cartItemAddHandler = (item) => {\n    cartContext.addItem({ ...item, amount: 1 });\n  };\n\n  const cartItems = cartContext.items.map((el) => (\n    <CartItem\n      key={el.id}\n      name={el.name}\n      amount={el.amount}\n      price={el.price}\n      onRemove={cartItemRemoveHandler.bind(null, el.id)}\n      onAdd={cartItemAddHandler.bind(null, el)}\n    />\n  ));\n  const totAmt = `${cartContext.totalAmount.toFixed(2)}`;\n  const hasItems = cartContext.items.length > 0;\n\n  return (\n    <Modal onClose={props.onClose}>\n      <ul className={classes[\"cart-items\"]}>{cartItems}</ul>\n      <div className={classes.total}>\n        <div>Total</div>\n        <div>{totAmt}</div>\n      </div>\n      <div className={classes.actions}>\n        <button className={classes[\"button-alt\"]} onClick={props.onClose}>\n          Close\n        </button>\n        {hasItems && <button className={classes.order}>Order</button>}\n      </div>\n    </Modal>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}